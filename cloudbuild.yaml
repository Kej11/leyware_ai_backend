steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/scout-workflow:${COMMIT_SHA}'
      - '-t'
      - 'gcr.io/${PROJECT_ID}/scout-workflow:latest'
      - '.'
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'gcr.io/${PROJECT_ID}/scout-workflow']
  
  # Deploy to Cloud Run Service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'scout-workflow'
      - '--image=gcr.io/${PROJECT_ID}/scout-workflow:${COMMIT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--timeout=3600'
      - '--memory=4Gi'
      - '--cpu=2'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--allow-unauthenticated'
      - '--set-env-vars=NODE_ENV=production,LOG_LEVEL=info'
      - '--update-secrets=NEON_DATABASE_URL=NEON_DATABASE_URL:latest,GOOGLE_GENERATIVE_AI_API_KEY=GOOGLE_GENERATIVE_AI_API_KEY:latest'
  
  # Deploy to Cloud Run Job
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'jobs'
      - 'deploy'
      - 'scout-workflow-job'
      - '--image=gcr.io/${PROJECT_ID}/scout-workflow:${COMMIT_SHA}'
      - '--region=${_REGION}'
      - '--max-retries=3'
      - '--parallelism=10'
      - '--task-timeout=86400'
      - '--set-env-vars=MODE=job,NODE_ENV=production,LOG_LEVEL=info'
      - '--update-secrets=NEON_DATABASE_URL=NEON_DATABASE_URL:latest,GOOGLE_GENERATIVE_AI_API_KEY=GOOGLE_GENERATIVE_AI_API_KEY:latest'

# Substitutions (can be overridden)
substitutions:
  _REGION: us-central1

# Images to push
images:
  - 'gcr.io/${PROJECT_ID}/scout-workflow:${COMMIT_SHA}'
  - 'gcr.io/${PROJECT_ID}/scout-workflow:latest'